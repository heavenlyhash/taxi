<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ant-project>
<project name="taxi" basedir="." default="dist">
	<description>
		taxi: prepare for takeoff / touch down gracefully
	</description>
	<property name="app" value="${ant.project.name}"/>


	<exec executable="git" failonerror="true">
		<arg value="submodule"/>
		<arg value="update"/>
		<arg value="--init"/>
		<arg value="lib/exus-build"/>
	</exec>
	<import file="lib/exus-build/build-exultant.xml"/>
	<import file="lib/exus-build/build-exultant-java.xml"/>
	<import file="lib/exus-build/bootstrap-mdm.xml"/>


	<property name="target.jar" value="${target}/${app}.jar"/>
	<property name="target.native" value="${target}/native"/>


	<target name="init" depends="exusInit,-bootstrap-mdm-modules">
	</target>


	<path id="app.path.deps.main" cache="true">
		<!--
		TODO: all of these deps are only relevant for apple targets.  Hello-world on linux is trivial and has none of these deps.
		Haven't decided if should link the robovm "dist" package and untar it in working space, or if should link libs individually.
		Currently paths are about right if you curl http://download.robovm.org/robovm-0.0.9.tar.gz and untar to "lib/" then strip the version number.
		-->
		<pathelement location="${lib}/robovm/lib/robovm-rt.jar" />
		<pathelement location="${lib}/robovm/lib/robovm-objc.jar" />
		<pathelement location="${lib}/robovm/lib/robovm-cocoatouch.jar" />
	</path>
	<path id="app.path.main">
		<path refid="app.path.deps.main" />
		<pathelement location="${target.javac}/main" />
	</path>
	<path id="app.path.deps.test">
		<path refid="app.path.main" />
		<pathelement location="${lib}/junit/junit.jar"/>
		<pathelement location="${target.javac}/test-fixtures" />
	</path>
	<path id="app.path.test">
		<path refid="app.path.deps.test" />
		<pathelement location="${target.javac}/test-unit" />
		<pathelement location="${target.javac}/test-integration" />
	</path>


	<target name="compile"
		depends="init"
		description="compile the source"
		>
		<exusJavacStrict
			classes="net/polydawn/taxi/**"
			>
			<classpath refid="app.path.deps.main" />
		</exusJavacStrict>
	</target>


	<target name="dist"
		depends="compile"
		description="pack distributable artifacts"
		>
		<exusPack destfile="${target.jar}">
			<manifest>
				<attribute name="Main-Class" value="net.polydawn.taxi.launch.Taxi"/>
			</manifest>
			<fileset file="${target.javac}/main/**"/>
		</exusPack>
		<chmod file="${target.jar}" perm="755"/>
	</target>


	<target name="dist-native"
		depends="dist"
		description="provide native binaries for the current platform from the distributable jvm bytecode artifacts"
		>
		<mkdir dir="${target.native}"/>
		<exec executable="robovm" dir="${target.native}" failonerror="true">
			<arg value="-o"/><arg value="${app}"/>
			<arg value="-cp"/><arg value="${basedir}/${target.jar}"/>
			<arg value="net.polydawn.taxi.launch.Taxi"/>
		</exec>
	</target>


	<target name="dist-native-mac"
		depends="dist"
		description="provide native binaries for ios"
		>
		<mkdir dir="${target.native}"/>
		<exec executable="robovm" dir="${target.native}" failonerror="true">
			<arg value="-o"/><arg value="${app}"/>
			<!--
			turn this on for ios... but not for mac; it changes where dylb path expectations point.
			<arg value="-arch"/><arg value="x86"/>
			<arg value="-os"/><arg value="ios"/>
			-->
			<arg value="-cp"/><arg value="${lib}/robovm/lib/robovm-rt.jar" />
			<arg value="-cp"/><arg value="${lib}/robovm/lib/robovm-objc.jar" />
			<arg value="-cp"/><arg value="${lib}/robovm/lib/robovm-cocoatouch.jar" />
			<arg value="-cp"/><arg value="${basedir}/${target.jar}"/>
			<arg value="net.polydawn.taxi.launch.TaxiApple"/>
		</exec>
	</target>


	<target name="clean"
		description="clean up">
		<delete dir="${target}"/>
	</target>


	<target name="compile-test"
		depends="compile"
		>
		<exusJavac
			tree="test-fixtures"
			depends="${toString:app.path.deps.test}"
		/>
		<exusJavac
			tree="test-unit"
			depends="${toString:app.path.deps.test}"
		/>
		<exusJavac
			tree="test-integration"
			depends="${toString:app.path.deps.test}"
		/>
	</target>


	<target name="run-test"
		depends="compile, compile-test"
		description="runs junit tests"
		>
		<property name="test.dir" value="${java.io.tmpdir}/${app}-test"/>
		<mkdir dir="${test.dir}"/>
		<junit printsummary="off" haltonfailure="yes" dir="${test.dir}" newenvironment="true">
			<formatter type="plain" usefile="false" />
			<classpath refid="app.path.test"/>
			<batchtest fork="yes">
				<fileset dir="${target.javac}/test-unit">
					<include name="**/*Test*.class"/>
				</fileset>
				<fileset dir="${target.javac}/test-integration">
					<include name="**/*Test*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
